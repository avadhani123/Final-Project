
SI 206 W17
Put your name here: Ankita Avadhani

----

Which option for the final project are you choosing -- 1, 2, or 3? 
I am choosing option 2 for the final project

IF YOU ARE CHOOSING OPTION 3, answer the following questions: 

* Write 1-3 sentences summarizing what the goal of your project is:


* What are your two data sources? Provide links to documentation or websites you will be getting data from.


* Why are you proposing this project?


* What will the output of this project be? What will it look like, and what information will it contain?


* What are your concerns about this proposal?


-----

THE FOLLOWING QUESTIONS ARE FOR EVERYONE. (Though they may be easier if you are choosing Option 1 or 2, because you can reference the Option 1 or 2 instructions.)

* What will at least one of the classes you're going to define be called?
Besides the required movie class, I will be creating a TwitterHandler class (as well as a OMDB handler as well) that extracts twitter data based on a search
input term and caches it as well.



* What will that class take as input to its constructor?
The constructor will have the inputs as self, consumer_key, consumer_key_secret, access_token, access_token_secret in order to extract tweets based
on my twitter data. 



* What will 1 instance of this class represent?
One instance of this class will represent a json dictionary of tweets extracted based on a given search term prompt.


* What are 3 instance variables this class will have? What will they be called, and what information will they hold? Why are they important?
Three instance variables of the class will be called:
		self.access_token = access_token
		self.access_token_secret = access_token_secret
		self.tweets = []
The access token and the token._secret both use the token key given to access twitter data needed. The tweets instance will be a list of the tweets 
extracted based on the movie search term. 


* Explain 2 methods the class will have that are not the class constructor (__init__ method) by answering the following questions for each. 
ONE METHOD:
- What will the name of the method be?
The method will be called search.

- What will the method do?
The search method will access tweets based on the tokens and sort them based on the top five retweeted tweets.

- Will it take any additional input? 
It will take in the input of self as well as an input keyword. 

- Will it return anything? Should it change anything about the instance/an instance variable? 
It will return a list of sorted tweets based on a search term and it will change the instance variable (the list will have different content based on the movie search term).



- Why is it useful for this class definition, in this program?
It is useful to have a search function that extracts twitter data and sorts it because I can then use this class with another class (OBDM movie class)
and associate those two types of data together in the main function. The class definition also keeps the code clean and well organized as well.
########I Have copied my function below so you can see an idea of what it may look like ##################
def search(self, keyword):
		auth = tweepy.OAuthHandler(self.consumer_key, self.consumer_key_secret)
		auth.set_access_token(self.access_token, self.access_token_secret)
		api = tweepy.API(auth)

		tweets = api.search(q=keyword, result_type="popular", count=4, 
			include_entities=False, lang="en")
		self.tweets = sorted(tweets, key=lambda x : x.favorite_count, reverse=True)[0:5]

		return self



ANOTHER METHOD:
- What will the name of the method be?
The name of the method will be display_results.

- What will the method do?
The method will display the top 5 twitter results based on a search term in the terminal where the program is run (in addition to caching the data
as well).


- Will it take any additional input? 
The only input this function will take is self. 


- Will it return anything? Should it change anything about the instance/an instance variable? 
It will not return anything, rather it will print the results so users can see the twitter results on the terminal (for the time being)

- Why is it useful for this class definition, in this program?
It's useful for this class definition since it makes displaying the contents of the tweets easier for the user and is easy to link it 
to other functions within the class that actually extract the twitter data. 

############## Function below ##############

	def display_results(self):
		for tweet in self.tweets:
			print (tweet.text) b
			print ("Favorites: " + str(tweet.favorite_count))
			print ("Author:    " + tweet.author.name)
			print ("Time:      " + str(tweet.created_at))
			print ("---")




[If you definitely want to have a third, feel free to answer those questions a third time, because you'll have to do so eventually. when you write documentation!]


* What will the tables in your database be?
I will have a tweets table that has information on a user, their tweet text, times retweeted and when their tweets were created. 
I will also have an OMDB table that will have the movie information, rating, director and when the movie was created.


* What fields will each database table have? Which field of them is the primary key? You should list the fields for each database table here, e.g.
Tweets:
- text ... 
(etc.)
The fields will be for the twitter and OMDB tables:
-id
-text
-created_at
-retweet_count
-screen_name




* List, in English, 2 queries you'll want to make from your database. At least one should be a JOIN. You can always change these later, but start with  ideas you're interested in and lessen the work on yourself later on! 
(e.g. from class examples, maybe "I want to make a query that accesses the numbers of times each user has favorited tweets, and the number of times tweets that user posted have been favorited -- so I'll be joining the Tweets table and the Users table")

One joined query I wish to make is a list of tuples with 2 elements in each tuple with the TWITTER user screenname and the text of the tweet -- for each tweet that has been retweeted more than 10 times with the searched movie name in it (joining Tweets and Movie Table). I also want to be able to make a database with all the OMDB data that ahs the rating, director and starring actors n it as well. This will also be a JOIN database too (joining tweets and movies table).


* What are at least 2 of the data processing mechanics you're planning to use? 
I will be using list comprehension to create a list called users from TwitterHandler instances, since I will have a TwitterHandler class and I will need to use list comprehension to create a list called movies from Movies instances, since I will have a Movies class. 



=
* Why will each of those be useful to you? What data might you use it on? 
(e.g. "Set comprehension: I think I'm going to be looking for unique names and proper nouns in this big set of text, so I'm going to use a set comprehension"). 
>>>This is especially important if you are doing Option 3, but it's important for everyone!<<<
I will need a counter to efficiently determine the top rated movies in the data as well asother data such as the most common director for a certain genre.  for example and I can compare these words and directors to other genres as well, which is interesting. I will also use list comprehensions so I can create tuples from the class objects so I can access this data easily.




* What will your output look like? Will it be a .txt file? a CSV file? something else? What information will it contain? >>>This is especially important if you are doing Option 3, but it's important for everyone!<<<

My output will be a .txt file that will have multiple database queries within it that shows the data for movie rating/genre/director as well as a query databse of twitter data as well and hopefully show correlations and patterns between the twitter data and movie rating data.